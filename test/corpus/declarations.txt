==================
Standard declaration
==================
data /www/std_decl type string.
---
(source
    (data_declaration
        (identifier)
        (type)))

==================
Data declaration with like reference
==================

data /www/std_decl like some_other_variable.
---
(source
    (data_declaration
        (identifier)
        (identifier)))

==================
Standard declaration + value
==================

data /www/std_decl type string value 'MY_VALUE'.
---
(source
    (data_declaration
        (identifier)
        (type)
        (literal_string)))

==================
Data decl with explicit initial value
==================

data /www/std_decl type string value is initial.
---
(source
    (data_declaration
        (identifier)
        (type)))

==================
Standard declaration + length + value
==================

data /www/std_decl type p length 3 value '100'.
---
(source
    (data_declaration
    (identifier)
    (type)
    (literal_int)
    (literal_string)))

==================
Standard declaration + value + length
==================

data /www/std_decl type p value '100' length 3.
---
(source
    (data_declaration
        (identifier)
        (type)
        (literal_string)
        (literal_int)))

==================
Standard declaration + value + length + decimals
==================

data /www/std_decl type p value '100.22' length 3 decimals 5.
---
(source
    (data_declaration
        (identifier)
        (type)
        (literal_string)
        (literal_int)
        (literal_int)))

==================
Standard declaration + read-only
==================

data /www/std_decl type p value '100.22' length 3 decimals 5 read-only.
---
(source
    (data_declaration
        (identifier)
        (type)
        (literal_string)
        (literal_int)
        (literal_int)))

==================
Standard declaration with buffer notation
==================

data /www/std_decl(20) type c.
---
(source
    (data_declaration
        (identifier)
        (literal_int)
        (type)))

==================
Multiple declarations
==================

data /www/std_decl1(30) type c value 'BUFFER_TEST'.
data /www/std_decl2 like some_ref_var read-only.
data /www/std_decl3 type p length 5 decimals 2 value '12.34'.
---
(source
    (data_declaration
        (identifier)
        (literal_int)
        (type)
        (literal_string))
    (data_declaration
        (identifier)
        (identifier))
    (data_declaration
        (identifier)
        (type)
        (literal_int)
        (literal_int)
        (literal_string)))

==================
Inline declaration
==================

data(/zzada/_inline_decl)
---
(source
    (inline_declaration
        (identifier)))

==================
Final Inline declaration
==================

final(/iwfnd/my_var)
---
(source
    (inline_declaration
        (identifier)))

==================
Final Inline declaration + assignment
==================

final(/iwfnd/my_var) = 100.
---
(source
    (inline_decl_assignment
        (identifier)
        (literal_int)))

==================
Data declaration multi line.
==================

data  /www/std_decl 
type    string
.
---
(source
    (data_declaration
        (identifier)
        (type)))

==================
Multiple data declarations
==================

data  /www/std_decl type /aawd/da/_some_type length 10 value is initial.
data  /www/sec_valu type /typ/_some_type length 10 read-only.
---
(source
    (data_declaration
        (identifier)
        (type)
        (literal_int))
    (data_declaration
        (identifier)
        (type)
        (literal_int)))